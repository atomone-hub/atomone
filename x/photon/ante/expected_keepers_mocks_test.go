// Code generated by MockGen. DO NOT EDIT.
// Source: x/photon/ante/expected_keepers.go

// Package ante_test is a generated GoMock package.
package ante_test

import (
	reflect "reflect"

	types "github.com/atomone-hub/atomone/x/photon/types"
	types0 "github.com/cosmos/cosmos-sdk/types"
	gomock "github.com/golang/mock/gomock"
)

// MockPhotonKeeper is a mock of PhotonKeeper interface.
type MockPhotonKeeper struct {
	ctrl     *gomock.Controller
	recorder *MockPhotonKeeperMockRecorder
}

// MockPhotonKeeperMockRecorder is the mock recorder for MockPhotonKeeper.
type MockPhotonKeeperMockRecorder struct {
	mock *MockPhotonKeeper
}

// NewMockPhotonKeeper creates a new mock instance.
func NewMockPhotonKeeper(ctrl *gomock.Controller) *MockPhotonKeeper {
	mock := &MockPhotonKeeper{ctrl: ctrl}
	mock.recorder = &MockPhotonKeeperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPhotonKeeper) EXPECT() *MockPhotonKeeperMockRecorder {
	return m.recorder
}

// GetParams mocks base method.
func (m *MockPhotonKeeper) GetParams(ctx types0.Context) types.Params {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetParams", ctx)
	ret0, _ := ret[0].(types.Params)
	return ret0
}

// GetParams indicates an expected call of GetParams.
func (mr *MockPhotonKeeperMockRecorder) GetParams(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetParams", reflect.TypeOf((*MockPhotonKeeper)(nil).GetParams), ctx)
}
