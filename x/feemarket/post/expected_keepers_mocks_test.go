// Code generated by MockGen. DO NOT EDIT.
// Source: x/feemarket/post/expected_keepers.go

// Package post_test is a generated GoMock package.
package post_test

import (
	reflect "reflect"

	types "github.com/atomone-hub/atomone/x/feemarket/types"
	types0 "github.com/cometbft/cometbft/proto/tendermint/types"
	types1 "github.com/cosmos/cosmos-sdk/types"
	gomock "github.com/golang/mock/gomock"
)

// MockFeeMarketKeeper is a mock of FeeMarketKeeper interface.
type MockFeeMarketKeeper struct {
	ctrl     *gomock.Controller
	recorder *MockFeeMarketKeeperMockRecorder
}

// MockFeeMarketKeeperMockRecorder is the mock recorder for MockFeeMarketKeeper.
type MockFeeMarketKeeperMockRecorder struct {
	mock *MockFeeMarketKeeper
}

// NewMockFeeMarketKeeper creates a new mock instance.
func NewMockFeeMarketKeeper(ctrl *gomock.Controller) *MockFeeMarketKeeper {
	mock := &MockFeeMarketKeeper{ctrl: ctrl}
	mock.recorder = &MockFeeMarketKeeperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFeeMarketKeeper) EXPECT() *MockFeeMarketKeeperMockRecorder {
	return m.recorder
}

// GetEnabledHeight mocks base method.
func (m *MockFeeMarketKeeper) GetEnabledHeight(ctx types1.Context) (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEnabledHeight", ctx)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetEnabledHeight indicates an expected call of GetEnabledHeight.
func (mr *MockFeeMarketKeeperMockRecorder) GetEnabledHeight(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEnabledHeight", reflect.TypeOf((*MockFeeMarketKeeper)(nil).GetEnabledHeight), ctx)
}

// GetParams mocks base method.
func (m *MockFeeMarketKeeper) GetParams(ctx types1.Context) (types.Params, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetParams", ctx)
	ret0, _ := ret[0].(types.Params)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetParams indicates an expected call of GetParams.
func (mr *MockFeeMarketKeeperMockRecorder) GetParams(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetParams", reflect.TypeOf((*MockFeeMarketKeeper)(nil).GetParams), ctx)
}

// GetState mocks base method.
func (m *MockFeeMarketKeeper) GetState(ctx types1.Context) (types.State, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetState", ctx)
	ret0, _ := ret[0].(types.State)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetState indicates an expected call of GetState.
func (mr *MockFeeMarketKeeperMockRecorder) GetState(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetState", reflect.TypeOf((*MockFeeMarketKeeper)(nil).GetState), ctx)
}

// SetState mocks base method.
func (m *MockFeeMarketKeeper) SetState(ctx types1.Context, state types.State) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetState", ctx, state)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetState indicates an expected call of SetState.
func (mr *MockFeeMarketKeeperMockRecorder) SetState(ctx, state interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetState", reflect.TypeOf((*MockFeeMarketKeeper)(nil).SetState), ctx, state)
}

// MockConsensusParamsKeeper is a mock of ConsensusParamsKeeper interface.
type MockConsensusParamsKeeper struct {
	ctrl     *gomock.Controller
	recorder *MockConsensusParamsKeeperMockRecorder
}

// MockConsensusParamsKeeperMockRecorder is the mock recorder for MockConsensusParamsKeeper.
type MockConsensusParamsKeeperMockRecorder struct {
	mock *MockConsensusParamsKeeper
}

// NewMockConsensusParamsKeeper creates a new mock instance.
func NewMockConsensusParamsKeeper(ctrl *gomock.Controller) *MockConsensusParamsKeeper {
	mock := &MockConsensusParamsKeeper{ctrl: ctrl}
	mock.recorder = &MockConsensusParamsKeeperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockConsensusParamsKeeper) EXPECT() *MockConsensusParamsKeeperMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockConsensusParamsKeeper) Get(arg0 types1.Context) (*types0.ConsensusParams, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0)
	ret0, _ := ret[0].(*types0.ConsensusParams)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockConsensusParamsKeeperMockRecorder) Get(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockConsensusParamsKeeper)(nil).Get), arg0)
}
