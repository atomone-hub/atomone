// Code generated by MockGen. DO NOT EDIT.
// Source: x/dynamicfee/types/expected_keepers.go

// Package testutil is a generated GoMock package.
package testutil

import (
	reflect "reflect"

	types "github.com/cometbft/cometbft/proto/tendermint/types"
	types0 "github.com/cosmos/cosmos-sdk/types"
	gomock "github.com/golang/mock/gomock"
)

// MockConsensusParamsKeeper is a mock of ConsensusParamsKeeper interface.
type MockConsensusParamsKeeper struct {
	ctrl     *gomock.Controller
	recorder *MockConsensusParamsKeeperMockRecorder
}

// MockConsensusParamsKeeperMockRecorder is the mock recorder for MockConsensusParamsKeeper.
type MockConsensusParamsKeeperMockRecorder struct {
	mock *MockConsensusParamsKeeper
}

// NewMockConsensusParamsKeeper creates a new mock instance.
func NewMockConsensusParamsKeeper(ctrl *gomock.Controller) *MockConsensusParamsKeeper {
	mock := &MockConsensusParamsKeeper{ctrl: ctrl}
	mock.recorder = &MockConsensusParamsKeeperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockConsensusParamsKeeper) EXPECT() *MockConsensusParamsKeeperMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockConsensusParamsKeeper) Get(arg0 types0.Context) (*types.ConsensusParams, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0)
	ret0, _ := ret[0].(*types.ConsensusParams)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockConsensusParamsKeeperMockRecorder) Get(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockConsensusParamsKeeper)(nil).Get), arg0)
}
