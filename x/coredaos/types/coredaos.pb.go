// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: atomone/coredaos/v1/coredaos.proto

package types

import (
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/cosmos/gogoproto/proto"
	github_com_cosmos_gogoproto_types "github.com/cosmos/gogoproto/types"
	_ "google.golang.org/protobuf/types/known/durationpb"
	io "io"
	math "math"
	math_bits "math/bits"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// Params defines the parameters for the x/coredaos module.
type Params struct {
	// steering_dao_address defines the address which has authority
	// to execute messages as Steering DAO.
	SteeringDaoAddress string `protobuf:"bytes,1,opt,name=steering_dao_address,json=steeringDaoAddress,proto3" json:"steering_dao_address,omitempty"`
	// oversight_dao_address defines the address which has authority
	// to execute messages as Oversight DAO.
	OversightDaoAddress string `protobuf:"bytes,2,opt,name=oversight_dao_address,json=oversightDaoAddress,proto3" json:"oversight_dao_address,omitempty"`
	// voting_period_extensions_limit defines the maximum number of times
	// a proposal's voting period can be extended.
	VotingPeriodExtensionsLimit uint32 `protobuf:"varint,3,opt,name=voting_period_extensions_limit,json=votingPeriodExtensionsLimit,proto3" json:"voting_period_extensions_limit,omitempty"`
	// voting_period_extension_duration defines the duration for which
	// a proposal's voting period can be extended.
	VotingPeriodExtensionDuration *time.Duration `protobuf:"bytes,4,opt,name=voting_period_extension_duration,json=votingPeriodExtensionDuration,proto3,stdduration" json:"voting_period_extension_duration,omitempty"`
}

func (m *Params) Reset()         { *m = Params{} }
func (m *Params) String() string { return proto.CompactTextString(m) }
func (*Params) ProtoMessage()    {}
func (*Params) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0229a660a0bf4dd, []int{0}
}
func (m *Params) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Params) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Params.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Params) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Params.Merge(m, src)
}
func (m *Params) XXX_Size() int {
	return m.Size()
}
func (m *Params) XXX_DiscardUnknown() {
	xxx_messageInfo_Params.DiscardUnknown(m)
}

var xxx_messageInfo_Params proto.InternalMessageInfo

func (m *Params) GetSteeringDaoAddress() string {
	if m != nil {
		return m.SteeringDaoAddress
	}
	return ""
}

func (m *Params) GetOversightDaoAddress() string {
	if m != nil {
		return m.OversightDaoAddress
	}
	return ""
}

func (m *Params) GetVotingPeriodExtensionsLimit() uint32 {
	if m != nil {
		return m.VotingPeriodExtensionsLimit
	}
	return 0
}

func (m *Params) GetVotingPeriodExtensionDuration() *time.Duration {
	if m != nil {
		return m.VotingPeriodExtensionDuration
	}
	return nil
}

func init() {
	proto.RegisterType((*Params)(nil), "atomone.coredaos.v1.Params")
}

func init() {
	proto.RegisterFile("atomone/coredaos/v1/coredaos.proto", fileDescriptor_a0229a660a0bf4dd)
}

var fileDescriptor_a0229a660a0bf4dd = []byte{
	// 348 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x92, 0xb1, 0x4e, 0xeb, 0x30,
	0x14, 0x86, 0xeb, 0xde, 0xaa, 0xd2, 0xcd, 0xd5, 0x5d, 0xd2, 0x5e, 0x29, 0xed, 0x15, 0x26, 0xea,
	0xd4, 0xa5, 0xb1, 0x0a, 0x4f, 0x40, 0x29, 0x03, 0xa8, 0x43, 0x55, 0x36, 0x96, 0xc8, 0x69, 0x8c,
	0x63, 0xa9, 0xc9, 0xa9, 0x6c, 0x27, 0x2a, 0x6f, 0xc1, 0xc8, 0x83, 0xf0, 0x10, 0x8c, 0x85, 0x89,
	0x0d, 0xd4, 0xbe, 0x08, 0x4a, 0x9c, 0x04, 0x90, 0x40, 0x6c, 0xe7, 0xf8, 0xff, 0xfe, 0xdf, 0x47,
	0xc7, 0xb6, 0x06, 0x54, 0x43, 0x0c, 0x09, 0x23, 0x4b, 0x90, 0x2c, 0xa4, 0xa0, 0x48, 0x36, 0xae,
	0x6b, 0x6f, 0x2d, 0x41, 0x83, 0xdd, 0x29, 0x19, 0xaf, 0x3e, 0xcf, 0xc6, 0xfd, 0x2e, 0x07, 0x0e,
	0x85, 0x4e, 0xf2, 0xca, 0xa0, 0x7d, 0xcc, 0x01, 0xf8, 0x8a, 0x91, 0xa2, 0x0b, 0xd2, 0x6b, 0x12,
	0xa6, 0x92, 0x6a, 0x01, 0x49, 0xa9, 0xf7, 0x96, 0xa0, 0x62, 0x50, 0xbe, 0x31, 0x9a, 0xc6, 0x48,
	0x83, 0xc7, 0xa6, 0xd5, 0x9e, 0x53, 0x49, 0x63, 0x65, 0x5f, 0x58, 0x5d, 0xa5, 0x19, 0x93, 0x22,
	0xe1, 0x7e, 0x48, 0xc1, 0xa7, 0x61, 0x28, 0x99, 0x52, 0x0e, 0x72, 0xd1, 0xf0, 0xf7, 0xc4, 0x79,
	0xba, 0x1f, 0x75, 0x4b, 0xeb, 0x89, 0x51, 0x2e, 0x75, 0xce, 0x2e, 0xec, 0xca, 0x35, 0xa5, 0x50,
	0x2a, 0xf6, 0xcc, 0xfa, 0x07, 0x19, 0x93, 0x4a, 0xf0, 0x48, 0x7f, 0x0a, 0x6b, 0xfe, 0x10, 0xd6,
	0xa9, 0x6d, 0x1f, 0xd2, 0x4e, 0x2d, 0x9c, 0x81, 0xce, 0xe7, 0x5a, 0x33, 0x29, 0x20, 0xf4, 0xd9,
	0x46, 0xb3, 0x44, 0x09, 0x48, 0x94, 0xbf, 0x12, 0xb1, 0xd0, 0xce, 0x2f, 0x17, 0x0d, 0xff, 0x2e,
	0xfe, 0x1b, 0x6a, 0x5e, 0x40, 0x67, 0x35, 0x33, 0xcb, 0x11, 0x3b, 0xb2, 0xdc, 0x6f, 0x42, 0xfc,
	0x6a, 0x5d, 0x4e, 0xcb, 0x45, 0xc3, 0x3f, 0x47, 0x3d, 0xcf, 0xec, 0xd3, 0xab, 0xf6, 0xe9, 0x4d,
	0x4b, 0x60, 0xd2, 0xba, 0x7b, 0x39, 0x44, 0x8b, 0x83, 0x2f, 0xef, 0xa9, 0xa1, 0xf3, 0x87, 0x1d,
	0x46, 0xdb, 0x1d, 0x46, 0xaf, 0x3b, 0x8c, 0x6e, 0xf7, 0xb8, 0xb1, 0xdd, 0xe3, 0xc6, 0xf3, 0x1e,
	0x37, 0xae, 0x08, 0x17, 0x3a, 0x4a, 0x03, 0x6f, 0x09, 0x31, 0x29, 0x9f, 0x77, 0x14, 0xa5, 0x41,
	0x55, 0x93, 0xcd, 0xfb, 0x87, 0xd0, 0x37, 0x6b, 0xa6, 0x82, 0x76, 0x31, 0xc2, 0xf1, 0x5b, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x9b, 0x7b, 0x58, 0xaa, 0x31, 0x02, 0x00, 0x00,
}

func (m *Params) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Params) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Params) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.VotingPeriodExtensionDuration != nil {
		n1, err1 := github_com_cosmos_gogoproto_types.StdDurationMarshalTo(*m.VotingPeriodExtensionDuration, dAtA[i-github_com_cosmos_gogoproto_types.SizeOfStdDuration(*m.VotingPeriodExtensionDuration):])
		if err1 != nil {
			return 0, err1
		}
		i -= n1
		i = encodeVarintCoredaos(dAtA, i, uint64(n1))
		i--
		dAtA[i] = 0x22
	}
	if m.VotingPeriodExtensionsLimit != 0 {
		i = encodeVarintCoredaos(dAtA, i, uint64(m.VotingPeriodExtensionsLimit))
		i--
		dAtA[i] = 0x18
	}
	if len(m.OversightDaoAddress) > 0 {
		i -= len(m.OversightDaoAddress)
		copy(dAtA[i:], m.OversightDaoAddress)
		i = encodeVarintCoredaos(dAtA, i, uint64(len(m.OversightDaoAddress)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.SteeringDaoAddress) > 0 {
		i -= len(m.SteeringDaoAddress)
		copy(dAtA[i:], m.SteeringDaoAddress)
		i = encodeVarintCoredaos(dAtA, i, uint64(len(m.SteeringDaoAddress)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintCoredaos(dAtA []byte, offset int, v uint64) int {
	offset -= sovCoredaos(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *Params) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.SteeringDaoAddress)
	if l > 0 {
		n += 1 + l + sovCoredaos(uint64(l))
	}
	l = len(m.OversightDaoAddress)
	if l > 0 {
		n += 1 + l + sovCoredaos(uint64(l))
	}
	if m.VotingPeriodExtensionsLimit != 0 {
		n += 1 + sovCoredaos(uint64(m.VotingPeriodExtensionsLimit))
	}
	if m.VotingPeriodExtensionDuration != nil {
		l = github_com_cosmos_gogoproto_types.SizeOfStdDuration(*m.VotingPeriodExtensionDuration)
		n += 1 + l + sovCoredaos(uint64(l))
	}
	return n
}

func sovCoredaos(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozCoredaos(x uint64) (n int) {
	return sovCoredaos(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Params) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCoredaos
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Params: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Params: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SteeringDaoAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCoredaos
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCoredaos
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCoredaos
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SteeringDaoAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OversightDaoAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCoredaos
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCoredaos
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCoredaos
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OversightDaoAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VotingPeriodExtensionsLimit", wireType)
			}
			m.VotingPeriodExtensionsLimit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCoredaos
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.VotingPeriodExtensionsLimit |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VotingPeriodExtensionDuration", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCoredaos
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCoredaos
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthCoredaos
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.VotingPeriodExtensionDuration == nil {
				m.VotingPeriodExtensionDuration = new(time.Duration)
			}
			if err := github_com_cosmos_gogoproto_types.StdDurationUnmarshal(m.VotingPeriodExtensionDuration, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCoredaos(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthCoredaos
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipCoredaos(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowCoredaos
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowCoredaos
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowCoredaos
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthCoredaos
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupCoredaos
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthCoredaos
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthCoredaos        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowCoredaos          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupCoredaos = fmt.Errorf("proto: unexpected end of group")
)
